# set - множество
# Множество-это тип данных,структура данных, содержит неупорядоченные
# элеметы(элементы не явл.индексированными
# #создание спомощью {} и разделяет :
# num_set = {1, 2, 3, 4, 5, 6}
# print(num_set)
# #добавили кортеж
# num_set = {1, 2, 3, (1, 2, 'ru'), 4, 5, 6}
# print(num_set)

# #добавили словари(выдает ошибку, т.к. словари изменяемый)
# num_set = {1, 2, 3, [1, 2, 'ru'], 4, 5, 6}
# print(num_set)

# # создание множеств
# string_set = {"Nicolas", "Michelle", "John", "Mercy"}
# print(string_set)

# #множество поддерживает разные типы данных
# mixed_set = {"Nicolas", "Michelle", "John", "Mercy", (1, 2, 3)}
# print(mixed_set)

# #создание множество из списка, вызвав встроенную функию set
#
# num_set = set([1, 2, 3, 4, 5, 6])
# print(num_set)
# #множество удаляет дубликаты, т.к. уникально и создает множество с нуля
# num_set = {1, 2, 3, 1, 2}
# print(num_set)

# #создание пустого множества привидёт к созданию пустого словаря, а не множества
# # x = {}
# # print(type(x))
# # #чтобы создать пустое множество нужно добавить set
# # x = set()
# # print(type(x))

# #итерация -это круг, использование цикла, приведет к прохождение всех элементов через начения
# months = set(['Jan', 'Feb, 'Mar])
# print()
#
# # также можем проверить наличие элемента в множестве
# months = set(['Jan', 'Feb, 'Mar])
# print('May' in months)

# # чтобы добавить элемент в множество add
# months = set(['Jan', 'Feb, 'Mar])
# months.add('Jan')
# print(months)

# #чтобы удалить элемент измножества discard -если элемнта нет, то ошибку не выдаст,
# и remove - если нет данного элемента, которй нужно удалит то выдаст ошибку
# num_set = {1, 2, 3, 4, 5, 6}
# num_set.discard(3)
# print(num_set)
# num_set = {1, 2, 3, 4, 5}
# num_set.remove(7)
# print(num_set)

# # метод удаления pop -  будет удалять в произвольном порядке значение
# num_set = {1, 2, 3, 4, 5, 6}
# num_set.pop()
# print(num_set)

# #clear так же удаляет
# num_set = {1, 2, 3, 4, 5, 6}
# num_set.clear()
# print(num_set)

# # объединение множеств
# x = set(['Jan', 'Feb', 'Mar', 'Apr', 'May'])
# y = set(['Jan', 'Feb', 'Mar', 'Apr', 'May'])
# all()


# #при выполнении операции, дубликаты игнорируются, так что только один из элементов дубликт.будет отображаться
#
# x = {1, 2, 3}
# y = {4, 5, 3}
# c = {6, 3, 8}
# output = x.union(y, c)
# print(output)

# # | - тоже объудинение
# x = {1, 2, 3}
# y = {4, 5, 3}
# c = {6, 3, 8}
# print(x | y | c)

# #пересечение множеств & и intersection
# x = {1, 2, 3}
# y = {4, 6, 3}
# print(x & y)    # пересечение множеств ищет элемент который есть и впервом и во втором множестве

# #разниа между множеств "-"
# a = {1, 2, 3}
# b = {4, 3, 6}
# print(a - b)
# print(b - a)    # разница между множествами

# #метод copy возвращает копию множества
#
# x = {1, 2, 3, 4}
# y = x.copy()
# print(x)

# метод isdisjoin() проверяет есть ли общие элем. - есть False, если нет то True
names_a = {'Nicholas', 'Michelle', 'John', 'Mercy'}
names_b = {'Nicholas', 'Michelle', 'John', 'Mercy'}
x = names_a.isdisjoint(names_b)
print(x)

# #len метод возвращает длину
# names_a = {'Nicholas', 'Michelle', 'John', 'Mercy'}
# print(len(names_a))
#
# # frozenset - отличие от set? frozenset - неизменяемы тип данных, set - изменяемый
#
# my_set = frozenset([1, 2, 3, 4, 5])
# print(type(my_set))